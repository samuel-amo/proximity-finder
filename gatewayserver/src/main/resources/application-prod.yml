spring:
  application:
    name: gateway-server
  cloud:
    gateway:
      routes:
        - id: provider-profile-service
          uri: lb://SERVICE-PROVIDER-PROFILE
          filters:
            - name: Retry
              args:
                instanceName: providerProfileRetry
            - name: CircuitBreaker
              args:
                instanceName: providerProfileCircuitBreaker
                fallbackUri: forward:/fallback/provider-profile-service
          predicates:
            - Method=GET

        - id: quote-service
          uri: lb://REQUEST-MANAGEMENT-SERVICE
          filters:
            - name: Retry
              args:
                instanceName: quoteServiceRetry
            - name: CircuitBreaker
              args:
                instanceName: quoteServiceCircuitBreaker
                fallbackUri: forward:/fallback/quote-service
          predicates:
            - Method=GET
        - id: help-and-support
          uri: lb://HELP-AND-SUPPORT
          filters:
            - name: Retry
              args:
                instanceName: helpAndSupportRetry
            - name: CircuitBreaker
              args:
                instanceName: helpAndSupportCircuitBreaker
                fallbackUri: forward:/fallback/support-service
          predicates:
            - Method=GET
        - id: management-service
          uri: lb://MANAGEMENT
          filters:
            - name: Retry
              args:
                instanceName: managementServiceRetry
            - name: CircuitBreaker
              args:
                instanceName: managementServiceCircuitBreaker
                fallbackUri: forward:/fallback/management-service
          predicates:
            - Path=/api/v1/management/**
            - Method=GET

      default-filters:
        - DedupeResponseHeader=Access-Control-Allow-Origin, RETAIN_FIRST
        - DedupeResponseHeader=Vary, RETAIN_UNIQUE

      global-cors:
        corsConfigurations:
          '[/**]':
            allowedOrigins:
              - ${FRONTEND_URL}
            allowedMethods:
              - GET
              - POST
              - PUT
              - DELETE
              - OPTIONS
              - PATCH
            allowedHeaders:
              - "Authorization"
              - "Content-Type"
              - "X-Requested-With"
            allowCredentials: true
jwt:
  secret: ${JWT_SECRET}

management:
  endpoints:
    web:
      exposure:
        include: '*'

eureka:
  client:
    service-url:
      defaultZone: http://${EUREKA_HOSTNAME:localhost}:${EUREKA_PORT:8761}/eureka/
    register-with-eureka: true
    fetch-registry: true

    healthcheck:
      enabled: true
  instance:
    prefer-ip-address: true

logging:
  level:
    org.springframework.web: DEBUG
    org.springframework.cloud.gateway.filter.headers: DEBUG
    io.github.resilience4j.circuitbreaker: DEBUG
    io.github.resilience4j.retry: DEBUG

server:
  port: ${SERVER_PORT:8888}

resilience4j:
  retry:
    configs:
      default:
        maxAttempts: 3
        waitDuration: 500ms
        retryExceptions:
          - java.io.IOException
          - org.springframework.web.client.HttpServerErrorException
    instances:
      providerProfileRetry:
        baseConfig: default
      quoteServiceRetry:
        baseConfig: default
      helpAndSupportRetry:
        baseConfig: default
      managementServiceRetry:
        baseConfig: default

  circuitbreaker:
    configs:
      default:
        failureRateThreshold: 50
        waitDurationInOpenState: 10000ms
        slidingWindowSize: 100
        minimumNumberOfCalls: 10
        permittedNumberOfCallsInHalfOpenState: 10
    instances:
      providerProfileCircuitBreaker:
        baseConfig: default
      quoteServiceCircuitBreaker:
        baseConfig: default
      helpAndSupportCircuitBreaker:
        baseConfig: default
      managementServiceCircuitBreaker:
        baseConfig: default


